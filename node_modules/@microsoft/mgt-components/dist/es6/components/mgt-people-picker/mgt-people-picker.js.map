{"version":3,"file":"mgt-people-picker.js","sourceRoot":"src/","sources":["components/mgt-people-picker/mgt-people-picker.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n\nimport { User } from '@microsoft/microsoft-graph-types';\nimport { customElement, html, internalProperty, property, TemplateResult } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { repeat } from 'lit-html/directives/repeat';\nimport { findGroups, findGroupsFromGroup, getGroupsForGroupIds, GroupType } from '../../graph/graph.groups';\nimport { findPeople, getPeople, PersonType, UserType } from '../../graph/graph.people';\nimport { findUsers, findGroupMembers, getUser, getUsersForUserIds } from '../../graph/graph.user';\nimport { IDynamicPerson, ViewType } from '../../graph/types';\nimport { Providers, ProviderState, MgtTemplatedComponent } from '@microsoft/mgt-element';\nimport '../../styles/style-helper';\nimport '../sub-components/mgt-spinner/mgt-spinner';\nimport { debounce, isValidEmail } from '../../utils/Utils';\nimport { MgtPerson, PersonViewType } from '../mgt-person/mgt-person';\nimport { PersonCardInteraction } from '../PersonCardInteraction';\nimport { MgtFlyout } from '../sub-components/mgt-flyout/mgt-flyout';\nimport { styles } from './mgt-people-picker-css';\n\nimport { strings } from './strings';\n\nexport { GroupType } from '../../graph/graph.groups';\nexport { PersonType, UserType } from '../../graph/graph.people';\n\n/**\n * An interface used to mark an object as 'focused',\n * so it can be rendered differently.\n *\n * @interface IFocusable\n */\ninterface IFocusable {\n  // tslint:disable-next-line: completed-docs\n  isFocused: boolean;\n}\n\n/**\n * Web component used to search for people from the Microsoft Graph\n *\n * @export\n * @class MgtPicker\n * @extends {MgtTemplatedComponent}\n *\n * @fires selectionChanged - Fired when selection changes\n *\n * @cssprop --color - {Color} Default font color\n *\n * @cssprop --input-border - {String} Input section entire border\n * @cssprop --input-border-top - {String} Input section border top only\n * @cssprop --input-border-right - {String} Input section border right only\n * @cssprop --input-border-bottom - {String} Input section border bottom only\n * @cssprop --input-border-left - {String} Input section border left only\n * @cssprop --input-background-color - {Color} Input section background color\n * @cssprop --input-border-color--hover - {Color} Input border hover color\n * @cssprop --input-border-color--focus - {Color} Input border focus color\n *\n * @cssprop --selected-person-background-color - {Color} Selected person background color\n *\n * @cssprop --dropdown-background-color - {Color} Background color of dropdown area\n * @cssprop --dropdown-item-hover-background - {Color} Background color of person during hover\n *\n * @cssprop --placeholder-color--focus - {Color} Color of placeholder text during focus state\n * @cssprop --placeholder-color - {Color} Color of placeholder text\n *\n */\n@customElement('mgt-people-picker')\nexport class MgtPeoplePicker extends MgtTemplatedComponent {\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * user the `css` tag function.\n   */\n  static get styles() {\n    return styles;\n  }\n\n  protected get strings() {\n    return strings;\n  }\n\n  /**\n   * Gets the flyout element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtLogin\n   */\n  protected get flyout(): MgtFlyout {\n    return this.renderRoot.querySelector('.flyout');\n  }\n\n  /**\n   * Gets the input element\n   *\n   * @protected\n   * @type {MgtFlyout}\n   * @memberof MgtLogin\n   */\n  protected get input(): HTMLInputElement {\n    return this.renderRoot.querySelector('.search-box__input');\n  }\n\n  /**\n   * value determining if search is filtered to a group.\n   * @type {string}\n   */\n  @property({ attribute: 'group-id' })\n  public get groupId(): string {\n    return this._groupId;\n  }\n  public set groupId(value) {\n    if (this._groupId === value) {\n      return;\n    }\n\n    this._groupId = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * value determining if search is filtered to a group.\n   * @type {PersonType}\n   */\n  @property({\n    attribute: 'type',\n    converter: (value, type) => {\n      value = value.toLowerCase();\n      if (!value || value.length === 0) {\n        return PersonType.any;\n      }\n\n      if (typeof PersonType[value] === 'undefined') {\n        return PersonType.any;\n      } else {\n        return PersonType[value];\n      }\n    }\n  })\n  public get type(): PersonType {\n    return this._type;\n  }\n  public set type(value) {\n    if (this._type === value) {\n      return;\n    }\n\n    this._type = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * type of group to search for - requires personType to be\n   * set to \"Group\" or \"All\"\n   * @type {GroupType}\n   */\n  @property({\n    attribute: 'group-type',\n    converter: (value, type) => {\n      if (!value || value.length === 0) {\n        return GroupType.any;\n      }\n\n      const values = value.split(',');\n      const groupTypes = [];\n\n      for (let v of values) {\n        v = v.trim();\n        if (typeof GroupType[v] !== 'undefined') {\n          groupTypes.push(GroupType[v]);\n        }\n      }\n\n      if (groupTypes.length === 0) {\n        return GroupType.any;\n      }\n\n      // tslint:disable-next-line:no-bitwise\n      return groupTypes.reduce((a, c) => a | c);\n    }\n  })\n  public get groupType(): GroupType {\n    return this._groupType;\n  }\n  public set groupType(value) {\n    if (this._groupType === value) {\n      return;\n    }\n\n    this._groupType = value;\n    this.requestStateUpdate(true);\n  }\n\n  @property({\n    attribute: 'user-type',\n    converter: (value, type) => {\n      value = value.toLowerCase();\n      if (!value || value.length === 0) {\n        return UserType.any;\n      }\n\n      if (typeof UserType[value] === 'undefined') {\n        return UserType.any;\n      } else {\n        return UserType[value];\n      }\n    }\n  })\n  public get userType(): UserType {\n    return this._userType;\n  }\n  public set userType(value) {\n    if (this._userType === value) {\n      return;\n    }\n\n    this._userType = value;\n    this.requestStateUpdate(true);\n  }\n\n  /**\n   * whether the return should contain a flat list of all nested members\n   * @type {boolean}\n   */\n  @property({\n    attribute: 'transitive-search',\n    type: Boolean\n  })\n  public transitiveSearch: boolean;\n\n  /**\n   * containing object of IDynamicPerson.\n   * @type {IDynamicPerson[]}\n   */\n  @property({\n    attribute: 'people',\n    type: Object\n  })\n  public people: IDynamicPerson[];\n\n  /**\n   * determining how many people to show in list.\n   * @type {number}\n   */\n  @property({\n    attribute: 'show-max',\n    type: Number\n  })\n  public showMax: number;\n\n  /**\n   *  array of user picked people.\n   * @type {IDynamicPerson[]}\n   */\n  @property({\n    attribute: 'selected-people',\n    type: Array\n  })\n  public selectedPeople: IDynamicPerson[];\n\n  /**\n   * array of people to be selected upon intialization\n   *\n   * @type {string[]}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'default-selected-user-ids',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public defaultSelectedUserIds: string[];\n\n  /**\n   * array of groups to be selected upon intialization\n   *\n   * @type {string[]}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'default-selected-group-ids',\n    converter: value => {\n      return value.split(',').map(v => v.trim());\n    },\n    type: String\n  })\n  public defaultSelectedGroupIds: string[];\n\n  /**\n   * Placeholder text.\n   *\n   * @type {string}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'placeholder',\n    type: String\n  })\n  public placeholder: string;\n\n  /**\n   * Determines whether component should be disabled or not\n   *\n   * @type {boolean}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'disabled',\n    type: Boolean\n  })\n  public disabled: boolean;\n\n  /**\n   * Determines if a user can enter an email without selecting a person\n   *\n   * @type {boolean}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'allow-any-email',\n    type: Boolean\n  })\n  public allowAnyEmail: boolean;\n\n  /**\n   * Determines whether component allows multiple or single selection of people\n   *\n   * @type {string}\n   * @memberof MgtPeoplePicker\n   */\n  @property({\n    attribute: 'selection-mode',\n    type: String\n  })\n  public selectionMode: string;\n\n  /**\n   * Get the scopes required for people picker\n   *\n   * @static\n   * @return {*}  {string[]}\n   * @memberof MgtPeoplePicker\n   */\n  public static get requiredScopes(): string[] {\n    return [\n      ...new Set(['user.read.all', 'people.read', 'group.read.all', 'user.readbasic.all', ...MgtPerson.requiredScopes])\n    ];\n  }\n\n  /**\n   * User input in search.\n   *\n   * @protected\n   * @type {string}\n   * @memberof MgtPeoplePicker\n   */\n  protected userInput: string;\n\n  // if search is still loading don't load \"people not found\" state\n  @property({ attribute: false }) private _showLoading: boolean;\n\n  private _groupId: string;\n  private _type: PersonType = PersonType.person;\n  private _groupType: GroupType = GroupType.any;\n  private _userType: UserType = UserType.any;\n\n  private defaultPeople: IDynamicPerson[];\n\n  // tracking of user arrow key input for selection\n  private _arrowSelectionCount: number = 0;\n  // List of people requested if group property is provided\n  private _groupPeople: IDynamicPerson[];\n  private _debouncedSearch: { (): void; (): void };\n  private defaultSelectedUsers: IDynamicPerson[];\n  private defaultSelectedGroups: IDynamicPerson[];\n\n  @internalProperty() private _isFocused = false;\n\n  @internalProperty() private _foundPeople: IDynamicPerson[];\n\n  constructor() {\n    super();\n    this.clearState();\n    this._showLoading = true;\n    this.showMax = 6;\n\n    this.disabled = false;\n    this.allowAnyEmail = false;\n  }\n\n  /**\n   * Focuses the input element when focus is called\n   *\n   * @param {FocusOptions} [options]\n   * @memberof MgtPeoplePicker\n   */\n  public focus(options?: FocusOptions) {\n    this.gainedFocus();\n    if (!this.input) {\n      return;\n    }\n    this.input.focus(options);\n    this.input.select();\n  }\n\n  /**\n   * Queries the microsoft graph for a user based on the user id and adds them to the selectedPeople array\n   *\n   * @param {readonly string []} an array of user ids to add to selectedPeople\n   * @returns {Promise<void>}\n   * @memberof MgtPeoplePicker\n   */\n  public async selectUsersById(userIds: readonly string[]): Promise<void> {\n    const provider = Providers.globalProvider;\n    const graph = Providers.globalProvider.graph;\n    if (provider && provider.state === ProviderState.SignedIn) {\n      // tslint:disable-next-line: forin\n      for (const id in userIds) {\n        try {\n          const personDetails = await getUser(graph, userIds[id]);\n          this.addPerson(personDetails);\n          // tslint:disable-next-line: no-empty\n        } catch (e) {}\n      }\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return a lit-html TemplateResult.\n   * Setting properties inside this method will not trigger the element to update.\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  public render(): TemplateResult {\n    const defaultTemplate = this.renderTemplate('default', { people: this._foundPeople });\n    if (defaultTemplate) {\n      return defaultTemplate;\n    }\n\n    const selectedPeopleTemplate = this.renderSelectedPeople(this.selectedPeople);\n    const inputTemplate = this.renderInput();\n    const flyoutTemplate = this.renderFlyout(inputTemplate);\n\n    const inputClasses = {\n      focused: this._isFocused,\n      'people-picker': true,\n      disabled: this.disabled\n    };\n\n    return html`\n      <div dir=${this.direction} class=${classMap(inputClasses)} @click=${e => this.focus(e)}>\n        <div class=\"selected-list\">\n          ${selectedPeopleTemplate} ${flyoutTemplate}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Clears state of the component\n   *\n   * @protected\n   * @memberof MgtPeoplePicker\n   */\n  protected clearState(): void {\n    this._groupId = null;\n    this.selectedPeople = [];\n    this.userInput = '';\n  }\n\n  /**\n   * Request to reload the state.\n   * Use reload instead of load to ensure loading events are fired.\n   *\n   * @protected\n   * @memberof MgtBaseComponent\n   */\n  protected requestStateUpdate(force?: boolean) {\n    if (force) {\n      this._groupPeople = null;\n      this._foundPeople = null;\n      this.selectedPeople = [];\n    }\n\n    return super.requestStateUpdate(force);\n  }\n\n  /**\n   * Render the input text box.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderInput(): TemplateResult {\n    const hasSelectedPeople = !!this.selectedPeople.length;\n\n    const placeholder = !this.disabled\n      ? this.placeholder\n        ? this.placeholder\n        : this.strings.inputPlaceholderText\n      : this.placeholder || '';\n\n    const selectionMode = this.selectionMode ? this.selectionMode : 'multiple';\n\n    const inputClasses = {\n      'search-box': true,\n      'search-box-start': hasSelectedPeople\n    };\n\n    if (selectionMode === 'single' && this.selectedPeople.length >= 1) {\n      this.lostFocus();\n      return null;\n    }\n\n    return html`\n      <div class=\"${classMap(inputClasses)}\">\n        <input\n          id=\"people-picker-input\"\n          class=\"search-box__input\"\n          type=\"text\"\n          placeholder=${placeholder}\n          label=\"people-picker-input\"\n          aria-label=\"people-picker-input\"\n          role=\"input\"\n          @keydown=\"${this.onUserKeyDown}\"\n          @keyup=\"${this.onUserKeyUp}\"\n          @blur=${this.lostFocus}\n          @click=${this.handleFlyout}\n          ?disabled=${this.disabled}\n        />\n      </div>\n    `;\n  }\n\n  /**\n   * Render the selected people tokens.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderSelectedPeople(selectedPeople?: IDynamicPerson[]): TemplateResult {\n    selectedPeople = selectedPeople || this.selectedPeople;\n    if (!this.selectedPeople || !this.selectedPeople.length) {\n      return null;\n    }\n    return html`\n      ${selectedPeople.slice(0, selectedPeople.length).map(\n        person =>\n          html`\n            <div class=\"selected-list__person-wrapper\">\n              ${\n                this.renderTemplate(\n                  'selected-person',\n                  { person },\n                  `selected-${person.id ? person.id : person.displayName}`\n                ) || this.renderSelectedPerson(person)\n              }\n\n              <div class=\"selected-list__person-wrapper__overflow\">\n                <div class=\"selected-list__person-wrapper__overflow__gradient\"></div>\n                <div\n                  class=\"selected-list__person-wrapper__overflow__close-icon\"\n                  @click=\"${e => this.removePerson(person, e)}\"\n                >\n                  \\uE711\n                </div>\n              </div>\n            </div>\n          `\n      )}\n    `;\n  }\n  /**\n   * Render the flyout chrome.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderFlyout(anchor: TemplateResult): TemplateResult {\n    return html`\n      <mgt-flyout light-dismiss class=\"flyout\">\n        ${anchor}\n        <div slot=\"flyout\" class=\"flyout-root\" @wheel=${(e: WheelEvent) => this.handleSectionScroll(e)}>\n          ${this.renderFlyoutContent()}\n        </div>\n      </mgt-flyout>\n    `;\n  }\n\n  /**\n   * Render the appropriate state in the results flyout.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderFlyoutContent(): TemplateResult {\n    if (this.isLoadingState || this._showLoading) {\n      return this.renderLoading();\n    }\n\n    let people = this._foundPeople;\n\n    if (!people || people.length === 0 || this.showMax === 0) {\n      return this.renderNoData();\n    }\n\n    // clears focus\n    for (const person of people) {\n      (person as IFocusable).isFocused = false;\n    }\n\n    people = people.slice(0, this.showMax);\n    (people[0] as IFocusable).isFocused = true;\n\n    return this.renderSearchResults(people);\n  }\n\n  /**\n   * Render the loading state.\n   *\n   * @protected\n   * @returns\n   * @memberof MgtPeoplePicker\n   */\n  protected renderLoading(): TemplateResult {\n    return (\n      this.renderTemplate('loading', null) ||\n      html`\n        <div class=\"message-parent\">\n          <mgt-spinner></mgt-spinner>\n          <div label=\"loading-text\" aria-label=\"loading\" class=\"loading-text\">\n            ${this.strings.loadingMessage}\n          </div>\n        </div>\n      `\n    );\n  }\n\n  /**\n   * Render the state when no results are found for the search query.\n   *\n   * @protected\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderNoData(): TemplateResult {\n    if (!this._isFocused) {\n      return;\n    }\n    return (\n      this.renderTemplate('error', null) ||\n      this.renderTemplate('no-data', null) ||\n      html`\n        <div class=\"message-parent\">\n          <div label=\"search-error-text\" aria-label=\"We didn't find any matches.\" class=\"search-error-text\">\n            ${this.strings.noResultsFound}\n          </div>\n        </div>\n      `\n    );\n  }\n\n  /**\n   * Render the list of search results.\n   *\n   * @protected\n   * @param {IDynamicPerson[]} people\n   * @returns\n   * @memberof MgtPeoplePicker\n   */\n  protected renderSearchResults(people?: IDynamicPerson[]) {\n    people = people || this._foundPeople;\n\n    return html`\n      <div class=\"people-list\">\n        ${repeat(\n          people,\n          person => person.id,\n          person => {\n            const listPersonClasses = {\n              focused: (person as IFocusable).isFocused,\n              'list-person': true\n            };\n            return html`\n              <li class=\"${classMap(listPersonClasses)}\" @click=\"${e => this.onPersonClick(person)}\">\n                ${this.renderPersonResult(person)}\n              </li>\n            `;\n          }\n        )}\n      </div>\n    `;\n  }\n\n  /**\n   * Render an individual person search result.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderPersonResult(person: IDynamicPerson): TemplateResult {\n    const user = person as User;\n    const subTitle = user.jobTitle || user.mail;\n\n    const classes = {\n      'people-person-job-title': true,\n      uppercase: !!user.jobTitle\n    };\n\n    return (\n      this.renderTemplate('person', { person }, person.id) ||\n      html`\n        <mgt-person .personDetails=${person} .fetchImage=${true}></mgt-person>\n        <div class=\"people-person-text-area\" id=\"${person.displayName}\">\n          ${this.renderHighlightText(person)}\n          <span class=\"${classMap(classes)}\">${subTitle}</span>\n        </div>\n      `\n    );\n  }\n\n  /**\n   * Render an individual selected person token.\n   *\n   * @protected\n   * @param {IDynamicPerson} person\n   * @returns {TemplateResult}\n   * @memberof MgtPeoplePicker\n   */\n  protected renderSelectedPerson(person: IDynamicPerson): TemplateResult {\n    return html`\n      <mgt-person\n        class=\"selected-list__person-wrapper__person\"\n        .personDetails=${person}\n        .fetchImage=${true}\n        .view=${ViewType.oneline}\n        .personCardInteraction=${PersonCardInteraction.click}\n      ></mgt-person>\n    `;\n  }\n\n  /**\n   * Async query to Graph for members of group if determined by developer.\n   * set's `this.groupPeople` to those members.\n   */\n  protected async loadState(): Promise<void> {\n    let people = this.people;\n    const input = this.userInput.toLowerCase();\n\n    const provider = Providers.globalProvider;\n    if (!people && provider && provider.state === ProviderState.SignedIn) {\n      const graph = provider.graph.forComponent(this);\n\n      if (!input.length && this._isFocused) {\n        if (this.defaultPeople) {\n          people = this.defaultPeople;\n        } else {\n          if (this.groupId) {\n            if (this._groupPeople === null) {\n              try {\n                this._groupPeople = await findGroupMembers(\n                  graph,\n                  null,\n                  this.groupId,\n                  this.showMax,\n                  this.type,\n                  this.transitiveSearch\n                );\n              } catch (_) {\n                this._groupPeople = [];\n              }\n            }\n            people = this._groupPeople || [];\n          } else if (this.type === PersonType.person || this.type === PersonType.any) {\n            people = await getPeople(graph, this.userType);\n          } else if (this.type === PersonType.group) {\n            const groups = (await findGroups(graph, '', this.showMax, this.groupType)) || [];\n            people = groups;\n          }\n          this.defaultPeople = people;\n        }\n      }\n      this._showLoading = false;\n\n      if (\n        (this.defaultSelectedUserIds || this.defaultSelectedGroupIds) &&\n        !this.selectedPeople.length &&\n        !this.defaultSelectedUsers\n      ) {\n        this.defaultSelectedUsers = await getUsersForUserIds(graph, this.defaultSelectedUserIds);\n        this.defaultSelectedGroups = await getGroupsForGroupIds(graph, this.defaultSelectedGroupIds);\n\n        this.selectedPeople = [...this.defaultSelectedUsers, ...this.defaultSelectedGroups];\n        this.requestUpdate();\n        this.fireCustomEvent('selectionChanged', this.selectedPeople);\n      }\n\n      if (input) {\n        people = [];\n\n        if (this.groupId) {\n          people =\n            (await findGroupMembers(graph, input, this.groupId, this.showMax, this.type, this.transitiveSearch)) || [];\n        } else {\n          if (this.type === PersonType.person || this.type === PersonType.any) {\n            try {\n              people = (await findPeople(graph, input, this.showMax, this.userType)) || [];\n            } catch (e) {\n              // nop\n            }\n\n            if (people.length < this.showMax && this.userType !== UserType.contact) {\n              try {\n                const users = (await findUsers(graph, input, this.showMax)) || [];\n\n                // make sure only unique people\n                const peopleIds = new Set(people.map(p => p.id));\n                for (const user of users) {\n                  if (!peopleIds.has(user.id)) {\n                    people.push(user);\n                  }\n                }\n              } catch (e) {\n                // nop\n              }\n            }\n          }\n          if ((this.type === PersonType.group || this.type === PersonType.any) && people.length < this.showMax) {\n            let groups = [];\n            try {\n              groups = (await findGroups(graph, input, this.showMax, this.groupType)) || [];\n              people = people.concat(groups);\n            } catch (e) {\n              // nop\n            }\n          }\n        }\n      }\n    }\n\n    //people = this.getUniquePeople(people);\n    this._foundPeople = this.filterPeople(people);\n  }\n\n  /**\n   * Hide the results flyout.\n   *\n   * @protected\n   * @memberof MgtPeoplePicker\n   */\n  protected hideFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.close();\n    }\n  }\n\n  /**\n   * Show the results flyout.\n   *\n   * @protected\n   * @memberof MgtPeoplePicker\n   */\n  protected showFlyout(): void {\n    const flyout = this.flyout;\n    if (flyout) {\n      flyout.open();\n    }\n  }\n\n  /**\n   * Removes person from selected people\n   * @param person - person and details pertaining to user selected\n   */\n  protected removePerson(person: IDynamicPerson, e: MouseEvent): void {\n    e.stopPropagation();\n    const filteredPersonArr = this.selectedPeople.filter(p => {\n      if (!person.id && p.displayName) {\n        return p.displayName !== person.displayName;\n      }\n      return p.id !== person.id;\n    });\n    this.selectedPeople = filteredPersonArr;\n    this.loadState();\n    this.fireCustomEvent('selectionChanged', this.selectedPeople);\n  }\n\n  /**\n   * Tracks when user selects person from picker\n   * @param person - contains details pertaining to selected user\n   * @param event - tracks user event\n   */\n  protected addPerson(person: IDynamicPerson): void {\n    if (person) {\n      this.clearInput();\n      const duplicatePeople = this.selectedPeople.filter(p => {\n        if (!person.id && p.displayName) {\n          return p.displayName === person.displayName;\n        }\n        return p.id === person.id;\n      });\n\n      if (duplicatePeople.length === 0) {\n        this.selectedPeople = [...this.selectedPeople, person];\n        this.fireCustomEvent('selectionChanged', this.selectedPeople);\n\n        this.loadState();\n        this._foundPeople = [];\n      }\n    }\n  }\n\n  private clearInput() {\n    this.input.value = '';\n    this.userInput = '';\n  }\n\n  private handleFlyout() {\n    // handles hiding control if default people have no more selections available\n    const peopleLeft = this.filterPeople(this.defaultPeople);\n    let shouldShow = true;\n    if (peopleLeft && peopleLeft.length === 0) {\n      shouldShow = false;\n    }\n\n    if (shouldShow) {\n      window.requestAnimationFrame(() => {\n        // Mouse is focused on input\n        this.showFlyout();\n      });\n    }\n  }\n\n  private gainedFocus() {\n    this._isFocused = true;\n    if (this.input) {\n      this.input.focus();\n    }\n    this._showLoading = true;\n    this.loadState();\n  }\n\n  private lostFocus() {\n    this._isFocused = false;\n    this.requestUpdate();\n  }\n\n  private renderHighlightText(person: IDynamicPerson): TemplateResult {\n    let first: string = '';\n    let last: string = '';\n    let highlight: string = '';\n\n    const displayName = person.displayName;\n    const highlightLocation = displayName.toLowerCase().indexOf(this.userInput.toLowerCase());\n    if (highlightLocation !== -1) {\n      const userInputLength = this.userInput.length;\n\n      // no location\n      if (highlightLocation === 0) {\n        // highlight is at the beginning of sentence\n        first = '';\n        highlight = displayName.slice(0, userInputLength);\n        last = displayName.slice(userInputLength, displayName.length);\n      } else if (highlightLocation === displayName.length) {\n        // highlight is at end of the sentence\n        first = displayName.slice(0, highlightLocation);\n        highlight = displayName.slice(highlightLocation, displayName.length);\n        last = '';\n      } else {\n        // highlight is in middle of sentence\n        first = displayName.slice(0, highlightLocation);\n        highlight = displayName.slice(highlightLocation, highlightLocation + userInputLength);\n        last = displayName.slice(highlightLocation + userInputLength, displayName.length);\n      }\n    } else {\n      first = person.displayName;\n    }\n\n    return html`\n      <div>\n        <span class=\"people-person-text\">${first}</span\n        ><span class=\"people-person-text highlight-search-text\">${highlight}</span\n        ><span class=\"people-person-text\">${last}</span>\n      </div>\n    `;\n  }\n\n  /**\n   * Adds debounce method for set delay on user input\n   */\n  private onUserKeyUp(event: KeyboardEvent): void {\n    if (event.keyCode === 40 || event.keyCode === 39 || event.keyCode === 38 || event.keyCode === 37) {\n      // keyCodes capture: down arrow (40), right arrow (39), up arrow (38) and left arrow (37)\n      return;\n    }\n\n    if (event.code === 'Tab' && !this.flyout.isOpen) {\n      // keyCodes capture: tab (9)\n      if (this.allowAnyEmail) {\n        this.gainedFocus();\n      }\n    }\n\n    if (event.shiftKey) {\n      this.gainedFocus();\n    }\n\n    const input = event.target as HTMLInputElement;\n\n    if (event.code === 'Escape') {\n      this.clearInput();\n      this._foundPeople = [];\n    } else if (event.code === 'Backspace' && this.userInput.length === 0 && this.selectedPeople.length > 0) {\n      // remove last person in selected list\n      this.selectedPeople = this.selectedPeople.splice(0, this.selectedPeople.length - 1);\n      this.loadState();\n      this.hideFlyout();\n      // fire selected people changed event\n      this.fireCustomEvent('selectionChanged', this.selectedPeople);\n    } else if (event.code === 'Comma' || event.code === 'Semicolon') {\n      if (this.allowAnyEmail) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      return;\n    } else {\n      this.userInput = input.value;\n      const validEmail = isValidEmail(this.userInput);\n      if (!validEmail) {\n        this.handleUserSearch();\n      }\n    }\n  }\n\n  private handleAnyEmail() {\n    this._showLoading = false;\n    this._arrowSelectionCount = 0;\n    if (isValidEmail(this.userInput)) {\n      const anyMailUser = {\n        mail: this.userInput,\n        displayName: this.userInput\n      };\n      this.addPerson(anyMailUser);\n    }\n    this.hideFlyout();\n    if (this.input) {\n      this.input.focus();\n      this._isFocused = true;\n    }\n  }\n\n  private onPersonClick(person: IDynamicPerson): void {\n    this.addPerson(person);\n    this.hideFlyout();\n\n    if (!this.input) {\n      return;\n    }\n\n    this.input.focus();\n    this._isFocused = true;\n    this.hideFlyout();\n    if (this.selectionMode === 'single') {\n      return;\n    }\n  }\n\n  /**\n   * Tracks event on user input in search\n   * @param input - input text\n   */\n  private handleUserSearch() {\n    if (!this._debouncedSearch) {\n      this._debouncedSearch = debounce(async () => {\n        const loadingTimeout = setTimeout(() => {\n          this._showLoading = true;\n        }, 50);\n\n        await this.loadState();\n        clearTimeout(loadingTimeout);\n        this._showLoading = false;\n        this.showFlyout();\n\n        this._arrowSelectionCount = 0;\n      }, 400);\n    }\n\n    this._debouncedSearch();\n  }\n\n  /**\n   * Tracks event on user search (keydown)\n   * @param event - event tracked on user input (keydown)\n   */\n  private onUserKeyDown(event: KeyboardEvent): void {\n    if (!this.flyout.isOpen) {\n      return;\n    }\n    if (event.keyCode === 40 || event.keyCode === 38) {\n      // keyCodes capture: down arrow (40) and up arrow (38)\n      this.handleArrowSelection(event);\n      if (this.input.value.length > 0) {\n        event.preventDefault();\n      }\n    }\n\n    const input = event.target as HTMLInputElement;\n    if (event.code === 'Tab' || event.code === 'Enter') {\n      if (!event.shiftKey && this._foundPeople) {\n        // keyCodes capture: tab (9) and enter (13)\n        event.preventDefault();\n        event.stopPropagation();\n        if (this._foundPeople.length) {\n          this.fireCustomEvent('blur');\n        }\n\n        const foundPerson = this._foundPeople[this._arrowSelectionCount];\n        if (foundPerson) {\n          this.addPerson(foundPerson);\n        } else if (this.allowAnyEmail) {\n          this.handleAnyEmail();\n        }\n      }\n      this.hideFlyout();\n      (event.target as HTMLInputElement).value = '';\n    } else if (event.code === 'Comma' || event.code === 'Semicolon') {\n      if (this.allowAnyEmail) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userInput = input.value;\n        this.handleAnyEmail();\n      }\n    }\n  }\n\n  /**\n   * Tracks user key selection for arrow key selection of people\n   * @param event - tracks user key selection\n   */\n  private handleArrowSelection(event: KeyboardEvent): void {\n    const peopleList = this.renderRoot.querySelector('.people-list');\n    if (peopleList && peopleList.children.length) {\n      // update arrow count\n      if (event.keyCode === 38) {\n        // up arrow\n        this._arrowSelectionCount =\n          (this._arrowSelectionCount - 1 + peopleList.children.length) % peopleList.children.length;\n      }\n      if (event.keyCode === 40) {\n        // down arrow\n        this._arrowSelectionCount = (this._arrowSelectionCount + 1) % peopleList.children.length;\n      }\n\n      // reset background color\n      // tslint:disable-next-line: prefer-for-of\n      for (let i = 0; i < peopleList.children.length; i++) {\n        peopleList.children[i].classList.remove('focused');\n      }\n\n      // set selected background\n      const focusedItem = peopleList.children[this._arrowSelectionCount];\n      if (focusedItem) {\n        focusedItem.classList.add('focused');\n        focusedItem.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n      }\n    }\n  }\n\n  /**\n   * Filters people searched from already selected people\n   * @param people - array of people returned from query to Graph\n   */\n  private filterPeople(people: IDynamicPerson[]): IDynamicPerson[] {\n    // check if people need to be updated\n    // ensuring people list is displayed\n    // find ids from selected people\n    if (people) {\n      const idFilter = this.selectedPeople.map(el => {\n        return el.id ? el.id : el.displayName;\n      });\n\n      // filter id's\n      const filtered = people.filter((person: IDynamicPerson) => {\n        if (person.id) {\n          return idFilter.indexOf(person.id) === -1;\n        } else {\n          return idFilter.indexOf(person.displayName) === -1;\n        }\n      });\n\n      return filtered;\n    }\n  }\n\n  // stop propagating wheel event to flyout so mouse scrolling works\n  private handleSectionScroll(e: WheelEvent) {\n    const target = this.renderRoot.querySelector('.flyout-root') as HTMLElement;\n    if (target) {\n      if (\n        !(e.deltaY < 0 && target.scrollTop === 0) &&\n        !(e.deltaY > 0 && target.clientHeight + target.scrollTop >= target.scrollHeight - 1)\n      ) {\n        e.stopPropagation();\n      }\n    }\n  }\n}\n"]}